e.gridOptions.data.forEach(function (row) {
            debugger
            console.log(row[$scope.col.field]);
            e.gridOptions.rows = e.grid.rows;
            e.gridOptions.api = e.grid.api;
            row.isSelected = true;
            row.enableSelection = true;
            //uiGridSelectionService.toggleRowSelection(e.grid, row, event, true, false);
            e.gridOptions.selection = {};
            e.gridOptions.selection.lastSelectedRow = null;
            e.gridOptions.selection.selectAll = false;
            var selected = false;
            var selectedRows;
            //var grid = $scope.col.grid;
            //var grid = e.gridOptions;
            //row.setSelected(!selected);
            if (row.isSelected === true) {
                //grid.selection.lastSelectedRow = row;
                e.gridOptions.selection.lastSelectedRow = row;
                //$scope.col.grid.selection.lastSelectedRow = row;
            }
            
            //selectedRows = uiGridSelectionService.getSelectedRows(e.grid);
            selectedRows = uiGridSelectionService.getSelectedRows(e.gridOptions);
            e.gridOptions.selection.selectAll = e.gridOptions.rows.length === selectedRows.length;

            e.gridOptions.api.selection.raise.rowSelectionChanged(row, event);

            //selectedRows = uiGridSelectionService.getSelectedRows(grid);
            //grid.selection.selectAll = grid.rows.length === selectedRows.length;

            //grid.api.selection.raise.rowSelectionChanged(row, event);


            if (row[$scope.col.field] === 0.00) {
                console.log('toggle Row selection is called')
                uiGridSelectionService.toggleRowSelection(e.grid, row, event, true, false);
            }
            console.log('toggle Row selection is not called')
        },
        
        )
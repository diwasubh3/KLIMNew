/*
Deployment script for Yoda

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar YorkCore_Geneva "YorkCore_Geneva"
:setvar DatabaseName "Yoda"
:setvar DefaultFilePrefix "Yoda"
:setvar DefaultDataPath "E:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "F:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
PRINT N'Altering [CLO].[AggregatedPosition]...';


GO
ALTER TABLE [CLO].[AggregatedPosition]
    ADD [LiborCategory]       VARCHAR (50)   NULL,
        [LiborTransitionNote] VARCHAR (1000) NULL;


GO
PRINT N'Altering [CLO].[AnalystResearchHeader]...';


GO
ALTER TABLE [CLO].[AnalystResearchHeader] ALTER COLUMN [LiborTransitionNote] VARCHAR (1000) NULL;


GO
PRINT N'Altering [CLO].[vw_AggregatePosition]...';


GO
ALTER VIEW CLO.vw_AggregatePosition
AS
	SELECT [PositionDateId]
      ,[CLO1NumExposure]
      ,[CLO2NumExposure]
      ,[CLO3NumExposure]
      ,[CLO4NumExposure]
      ,[CLO5NumExposure]
      ,[CLO6NumExposure]
      ,[CLO7NumExposure]
	  ,[CLO8NumExposure]
      ,[CLO1Exposure]
      ,[CLO2Exposure]
      ,[CLO3Exposure]
      ,[CLO4Exposure]
      ,[CLO5Exposure]
      ,[CLO6Exposure]
      ,[CLO7Exposure]
	  ,[CLO8Exposure]
      ,[CLO1PctExposure]
      ,[CLO2PctExposure]
      ,[CLO3PctExposure]
      ,[CLO4PctExposure]
      ,[CLO5PctExposure]
      ,[CLO6PctExposure]
      ,[CLO7PctExposure]
	  ,[CLO8PctExposure]
      ,[CLO1TargetPar]
      ,[CLO2TargetPar]
      ,[CLO3TargetPar]
      ,[CLO4TargetPar]
      ,[CLO5TargetPar]
      ,[CLO6TargetPar]
      ,[CLO7TargetPar]
	  ,[CLO8TargetPar]
      ,[SecurityId]
      ,[SecurityCode]
      ,[SecurityDesc]
      ,[BBGId]
      ,[Issuer]
      ,[IssuerId]
      ,[IssuerDesc]
      ,[Facility]
      ,[CallDate]
      ,[CountryDesc]
      ,[MaturityDate]
      ,[SnpIndustry]
      ,[MoodyIndustry]
      ,[IsCovLite]
      ,[IsFloating]
      ,[LienType]
      ,[IsOnWatch]
      ,[WatchObjectTypeId]
      ,[WatchObjectId]
      ,[WatchId]
      ,[WatchComments]
      ,[WatchLastUpdatedOn]
      ,[WatchUser]
      ,[SellCandidateObjectTypeId]
      ,[SellCandidateObjectId]
      ,[SellCandidateId]
      ,[SellCandidateComments]
      ,[SellCandidateLastUpdatedOn]
      ,[SellCandidateUser]
      ,[OrigSecurityCode]
      ,[OrigSecurityDesc]
      ,[OrigBBGId]
      ,[OrigIssuer]
      ,[OrigFacility]
      ,[OrigCallDate]
      ,[OrigMaturityDate]
      ,[OrigSnpIndustry]
      ,[OrigMoodyIndustry]
      ,[OrigIsFloating]
      ,[OrigLienType]
      ,[OrigMoodyFacilityRatingAdjusted]
      ,[OrigMoodyCashFlowRatingAdjusted]
      ,[Bid]
      ,[Offer]
      ,[BidNum]
      ,[OfferNum]
      ,[Spread]
      ,[LiborFloor]
      ,[MoodyCashFlowRating]
      ,[MoodyCashFlowRatingAdjusted]
      ,[MoodyFacilityRating]
      ,[MoodyRecovery]
      ,[SnPIssuerRating]
      ,[SnPIssuerRatingAdjusted]
      ,[SnPFacilityRating]
      ,[SnPfacilityRatingAdjusted]
      ,[SnPRecoveryRating]
      ,[MoodyOutlook]
      ,[MoodyWatch]
      ,[SnPWatch]
      ,[NextReportingDate]
      ,[FiscalYearEndDate]
      ,[YieldBid]
      ,[YieldOffer]
      ,[YieldMid]
      ,[CappedYieldBid]
      ,[CappedYieldOffer]
      ,[CappedYieldMid]
      ,[TargetYieldBid]
      ,[TargetYieldOffer]
      ,[TargetYieldMid]
      ,[BetterWorseBid]
      ,[BetterWorseOffer]
      ,[BetterWorseMid]
      ,[TotalCoupon]
      ,[WARF]
      ,[WARFRecovery]
      ,[Life]
      ,[TotalPar]
      ,[TotalParNum]
      ,[BODTotalPar]
      ,[MoodyFacilityRatingAdjusted]
      ,[CLOAnalyst]
      ,[HFAnalyst]
      ,[AsOfDate]
      ,[CreditScore]
      ,[LiquidityScore]
      ,[OneLLeverage]
      ,[TotalLeverage]
      ,[EVMultiple]
      ,[LTMRevenues]
      ,[LTMEBITDA]
      ,[FCF]
      ,[Comments]
      ,[BusinessDescription]
      ,[AgentBank]
      ,[SecurityMaturityDate]
      ,[IsOnAlert]
      ,[LTMFCF]
      ,[EnterpriseValue]
      ,[SeniorLeverage]
      ,[CostPrice]
      ,[CostPriceNum]
      ,[PrevDayBidNum]
      ,[PrevDayOfferNum]
      ,[PrevDayBid]
      ,[PrevDayOffer]
      ,[PriceMove]
      ,[SearchText]
      ,[LienTypeId]
      ,[ScoreDescription]
      ,[GlobalAmount]
      ,[IsPrivate]
      ,[Sponsor]
      ,[CLO1MatrixImpliedSpread]
      ,[CLO2MatrixImpliedSpread]
      ,[CLO3MatrixImpliedSpread]
      ,[CLO4MatrixImpliedSpread]
      ,[CLO5MatrixImpliedSpread]
      ,[CLO6MatrixImpliedSpread]
      ,[CLO7MatrixImpliedSpread]
	  ,[CLO8MatrixImpliedSpread]
      ,[CLO1DifferentialImpliedSpread]
      ,[CLO2DifferentialImpliedSpread]
      ,[CLO3DifferentialImpliedSpread]
      ,[CLO4DifferentialImpliedSpread]
      ,[CLO5DifferentialImpliedSpread]
      ,[CLO6DifferentialImpliedSpread]
      ,[CLO7DifferentialImpliedSpread]
	  ,[CLO8DifferentialImpliedSpread]
	  ,[CLO1MatrixWarfRecovery]
      ,[CLO2MatrixWarfRecovery]
      ,[CLO3MatrixWarfRecovery]
      ,[CLO4MatrixWarfRecovery]
      ,[CLO5MatrixWarfRecovery]
      ,[CLO6MatrixWarfRecovery]
      ,[CLO7MatrixWarfRecovery]
	  ,[CLO8MatrixWarfRecovery]
	  , zSnPAssetRecoveryRating
	  , SnpWarf
	  , SnpLgd
	  , MoodysLgd
	  , YieldAvgLgd
	  , SnpAAARecovery
	  , SnpCreditWatch
	  , LiborBaseRate
	  , [CLO-4 WARF]
	,[LiborCategory]
	,[LiborTransitionNote]
	  FROM CLO.AggregatedPosition 

	  WHERE 

	  PositionDateId = CLO.GetPrevDayDateId()
GO
PRINT N'Altering [CLO].[spGenerateAggregatedPositions]...';


GO
ALTER PROCEDURE [CLO].[spGenerateAggregatedPositions]

AS

delete from CLO.AggregatedPosition where PositionDateId = CLO.GetPrevDayDateId()

SELECT SecurityId, [CLO-1], [CLO-2], [CLO-3], [CLO-4], [CLO-5], [CLO-6], [CLO-7], [CLO-8]
into #PivotedMatrixImpliedSpread
FROM 
	(SELECT [MatrixImpliedSpread] = MAX(c.[MatrixImpliedSpread]), FundCode = f.ParentFundCode, c.SecurityId
			FROM CLO.vw_Calculation c WITH (NOLOCK)
			JOIN CLO.Fund f WITH(NOLOCK) ON f.FundId = c.FundId
			WHERE c.DateId = CLO.GetPrevDayDateId()
			GROUP BY f.ParentFundCode, c.SecurityId
	) AS s PIVOT
(MAX([MatrixImpliedSpread]) FOR FundCode IN ([CLO-1], [CLO-2], [CLO-3], [CLO-4], [CLO-5], [CLO-6], [CLO-7], [CLO-8]) )AS pvt


SELECT SecurityId, [CLO-1], [CLO-2], [CLO-3], [CLO-4], [CLO-5], [CLO-6], [CLO-7], [CLO-8]
into #PivotedMatrixWarfRecovery
FROM 
	(SELECT MatrixWARFRecovery = MAX(c.MatrixWARFRecovery), FundCode = f.ParentFundCode, c.SecurityId
			FROM CLO.vw_Calculation c WITH (NOLOCK)
			JOIN CLO.Fund f WITH(NOLOCK) ON f.FundId = c.FundId
			WHERE c.DateId = CLO.GetPrevDayDateId()
			GROUP BY f.ParentFundCode, c.SecurityId
	) AS s PIVOT
(MAX(MatrixWARFRecovery) FOR FundCode IN ([CLO-1], [CLO-2], [CLO-3], [CLO-4], [CLO-5], [CLO-6], [CLO-7], [CLO-8]) )AS pvt

		;WITH wsodata AS
		(
			SELECT SecurityID AS SecurityCode, MIN(BankDeal_GlobalAmount) AS MinIssueSize, MAX(BankDeal_GlobalAmount) AS MaxIssueSize
			FROM CLO.WsoExtractAssets
			WHERE DateId = [CLO].[GetPrevDayDateId]()
			GROUP BY SecurityID
		),
		loancontract AS
		(
			SELECT SecurityCode, AVG(C.GlobalAmount) AS Average, MIN(C.GlobalAmount) MinAmt, MAX(C.GlobalAmount) AS MaxAmt
			FROM (
			SELECT AssetLoanXIDAssetIDName AS SecurityCode, F.FundId, SUM(C.ContractGlobalAmount) AS GlobalAmount FROM CLO.LoanContract C 
			INNER JOIN Yoda.CLO.Fund F
			ON F.PortfolioName = C.PortfolioName
			WHERE C.AsOfDate = DataMarts.dbo.GetDateFromDateId(Yoda.CLO.GetPrevDayDateId())
			and (f.IsActive = 1 OR f.IsWarehouse = 1)
			GROUP BY C.AssetLoanXIDAssetIDName, F.FundId) C
			GROUP BY C.SecurityCode
		),
		totalPar AS
		(
			SELECT F.SecurityId, SUM(F.Exposure) AS TotalExposure
			FROM CLO.vw_PositionCountryFund F
			WHERE DateId = CLO.GetPrevDayDateId()
			GROUP BY F.SecurityId
		)

INSERT INTO [CLO].[AggregatedPosition]
           ([PositionDateId]
           ,[CLO1NumExposure]
           ,[CLO2NumExposure]
           ,[CLO3NumExposure]
           ,[CLO4NumExposure]
           ,[CLO5NumExposure]
           ,[CLO6NumExposure]
           ,[CLO7NumExposure]
		   ,[CLO8NumExposure]

           ,[CLO1Exposure]
           ,[CLO2Exposure]
           ,[CLO3Exposure]
           ,[CLO4Exposure]
           ,[CLO5Exposure]
           ,[CLO6Exposure]
           ,[CLO7Exposure]
		   ,[CLO8Exposure]

           ,[CLO1PctExposure]
           ,[CLO2PctExposure]
           ,[CLO3PctExposure]
           ,[CLO4PctExposure]
           ,[CLO5PctExposure]
           ,[CLO6PctExposure]
           ,[CLO7PctExposure]
		   ,[CLO8PctExposure]

           ,[CLO1TargetPar]
           ,[CLO2TargetPar]
           ,[CLO3TargetPar]
           ,[CLO4TargetPar]
           ,[CLO5TargetPar]
           ,[CLO6TargetPar]
           ,[CLO7TargetPar]
		   ,[CLO8TargetPar]

           ,[SecurityId]
           ,[SecurityCode]
           ,[SecurityDesc]
           ,[BBGId]
           ,[Issuer]
           ,[IssuerId]
           ,[IssuerDesc]
           ,[Facility]
           ,[CallDate]
           ,[CountryDesc]
           ,[MaturityDate]
           ,[SnpIndustry]
           ,[MoodyIndustry]

           ,[IsCovLite]
           ,[IsFloating]
           ,[LienType]
           ,[IsOnWatch]
           ,[WatchObjectTypeId]
           ,[WatchObjectId]
           ,[WatchId]
           ,[WatchComments]
           ,[WatchLastUpdatedOn]
           ,[WatchUser]

           ,[SellCandidateObjectTypeId]
           ,[SellCandidateObjectId]
           ,[SellCandidateId]
           ,[SellCandidateComments]
           ,[SellCandidateLastUpdatedOn]
           ,[SellCandidateUser]
           ,[OrigSecurityCode]
           ,[OrigSecurityDesc]
           ,[OrigBBGId]
           ,[OrigIssuer]

           ,[OrigFacility]
           ,[OrigCallDate]
           ,[OrigMaturityDate]
           ,[OrigSnpIndustry]
           ,[OrigMoodyIndustry]
           ,[OrigIsFloating]
           ,[OrigLienType]
           ,[OrigMoodyFacilityRatingAdjusted]
           ,[OrigMoodyCashFlowRatingAdjusted]
           ,[Bid]

           ,[Offer]
           ,[BidNum]
           ,[OfferNum]
           ,[Spread]
           ,[LiborFloor]
           ,[MoodyCashFlowRating]
           ,[MoodyCashFlowRatingAdjusted]
           ,[MoodyFacilityRating]
           ,[MoodyRecovery]
           ,[SnPIssuerRating]
           ,[SnPIssuerRatingAdjusted]
           ,[SnPFacilityRating]
           ,[SnPfacilityRatingAdjusted]
           ,[SnPRecoveryRating]
           ,[MoodyOutlook]

           ,[MoodyWatch]
           ,[SnPWatch]
           ,[NextReportingDate]
           ,[FiscalYearEndDate]
           ,[YieldBid]
           ,[YieldOffer]
           ,[YieldMid]
           ,[CappedYieldBid]
           ,[CappedYieldOffer]
           ,[CappedYieldMid]
           ,[TargetYieldBid]
           ,[TargetYieldOffer]
           ,[TargetYieldMid]
           ,[BetterWorseBid]
           ,[BetterWorseOffer]

           ,[BetterWorseMid]
           ,[TotalCoupon]
           ,[WARF]
           ,[WARFRecovery]
           ,[Life]
           ,[TotalPar]
           ,[TotalParNum]
           ,[BODTotalPar]
           ,[MoodyFacilityRatingAdjusted]
           ,[CLOAnalyst]
           ,[HFAnalyst]
           ,[AsOfDate]
           ,[CreditScore]
           ,[LiquidityScore]
           ,[OneLLeverage]

           ,[TotalLeverage]
           ,[EVMultiple]
           ,[LTMRevenues]
           ,[LTMEBITDA]
           ,[FCF]
           ,[Comments]
           ,[BusinessDescription]
           ,[AgentBank]
           ,[SecurityMaturityDate]
           ,[IsOnAlert]
           ,[LTMFCF]
           ,[EnterpriseValue]
           ,[SeniorLeverage]
           ,[CostPrice]
           ,[CostPriceNum]

           ,[PrevDayBidNum]
           ,[PrevDayOfferNum]
           ,[PrevDayBid]
           ,[PrevDayOffer]
           ,[PriceMove]
           ,[SearchText]
           ,[LienTypeId]
           ,[ScoreDescription]
           ,[GlobalAmount]
		   ,[IsPrivate]
		   ,[Sponsor]

           ,[CLO1MatrixImpliedSpread]
           ,[CLO2MatrixImpliedSpread]
           ,[CLO3MatrixImpliedSpread]
           ,[CLO4MatrixImpliedSpread]
           ,[CLO5MatrixImpliedSpread]
           ,[CLO6MatrixImpliedSpread]
		   ,[CLO7MatrixImpliedSpread]
           ,[CLO8MatrixImpliedSpread]

           ,[CLO1DifferentialImpliedSpread]
           ,[CLO2DifferentialImpliedSpread]
           ,[CLO3DifferentialImpliedSpread]
           ,[CLO4DifferentialImpliedSpread]
           ,[CLO5DifferentialImpliedSpread]
           ,[CLO6DifferentialImpliedSpread]
           ,[CLO7DifferentialImpliedSpread]
		   ,[CLO8DifferentialImpliedSpread]

		   ,[CLO1MatrixWarfRecovery]
		   ,[CLO2MatrixWarfRecovery]
		   ,[CLO3MatrixWarfRecovery]
		   ,[CLO4MatrixWarfRecovery]
		   ,[CLO5MatrixWarfRecovery]
		   ,[CLO6MatrixWarfRecovery]
		   ,[CLO7MatrixWarfRecovery]
		   ,[CLO8MatrixWarfRecovery]
		   ,[zSnPAssetRecoveryRating]
		   ,[SnpWarf]
		   ,[SnpLgd]
		   ,[MoodysLgd]
		   ,[YieldAvgLgd]
		   ,[SnpAAARecovery]
		   ,[SnpCreditWatch]
		   ,[LiborBaseRate]
		   ,[CLO-4 WARF]
		   ,[CLO-5 WARF]
		   ,[LiborCategory]
		   ,[LiborTransitionNote]
		   )

SELECT 
		  CLO.GetPrevDayDateId() PositionDateId
		  , NULLIF((ISNULL(MAX(pos.[CLO-1]),0) + ISNULL(MAX(allocation.[CLO-1]),0)),0)	CLO1NumExposure
		  , NULLIF((ISNULL(MAX(pos.[CLO-2]),0) + ISNULL(MAX(allocation.[CLO-2]),0)),0)	CLO2NumExposure
		  , NULLIF((ISNULL(MAX(pos.[CLO-3]),0) + ISNULL(MAX(allocation.[CLO-3]),0)),0)	CLO3NumExposure
		  , NULLIF((ISNULL(MAX(pos.[CLO-4]),0) + ISNULL(MAX(allocation.[CLO-4]),0)),0)	CLO4NumExposure
		  , NULLIF((ISNULL(MAX(pos.[CLO-5]),0) + ISNULL(MAX(allocation.[CLO-5]),0)),0)	CLO5NumExposure
		  , NULLIF((ISNULL(MAX(pos.[CLO-6]),0) + ISNULL(MAX(allocation.[CLO-6]),0)),0)	CLO6NumExposure
		  , NULLIF((ISNULL(MAX(pos.[CLO-7]),0) + ISNULL(MAX(allocation.[CLO-7]),0)),0)	CLO7NumExposure
		  , NULLIF((ISNULL(MAX(pos.[CLO-8]),0) + ISNULL(MAX(allocation.[CLO-8]),0)),0)	CLO8NumExposure

		  , FORMAT(NULLIF((ISNULL(MAX(pos.[CLO-1]),0) + ISNULL(MAX(allocation.[CLO-1]),0)),0), '#,###')	CLO1Exposure
		  , FORMAT(NULLIF((ISNULL(MAX(pos.[CLO-2]),0) + ISNULL(MAX(allocation.[CLO-2]),0)),0), '#,###')	CLO2Exposure
		  , FORMAT(NULLIF((ISNULL(MAX(pos.[CLO-3]),0) + ISNULL(MAX(allocation.[CLO-3]),0)),0), '#,###')	CLO3Exposure
		  , FORMAT(NULLIF((ISNULL(MAX(pos.[CLO-4]),0) + ISNULL(MAX(allocation.[CLO-4]),0)),0), '#,###')	CLO4Exposure
		  , FORMAT(NULLIF((ISNULL(MAX(pos.[CLO-5]),0) + ISNULL(MAX(allocation.[CLO-5]),0)),0), '#,###')	CLO5Exposure
		  , FORMAT(NULLIF((ISNULL(MAX(pos.[CLO-6]),0) + ISNULL(MAX(allocation.[CLO-6]),0)),0), '#,###')	CLO6Exposure
		  , FORMAT(NULLIF((ISNULL(MAX(pos.[CLO-7]),0) + ISNULL(MAX(allocation.[CLO-7]),0)),0), '#,###')	CLO7Exposure
		  , FORMAT(NULLIF((ISNULL(MAX(pos.[CLO-8]),0) + ISNULL(MAX(allocation.[CLO-8]),0)),0), '#,###')	CLO8Exposure

		  , FORMAT(((ISNULL(MAX(pos.[CLO-1]),0) + ISNULL(MAX(allocation.[CLO-1]),0))/ISNULL(MAX(targetPar.[CLO-1]),1)) , 'p')  CLO1PctExposure   
		  , FORMAT(((ISNULL(MAX(pos.[CLO-2]),0) + ISNULL(MAX(allocation.[CLO-2]),0))/ISNULL(MAX(targetPar.[CLO-2]),1)) , 'p')  CLO2PctExposure 
		  , FORMAT(((ISNULL(MAX(pos.[CLO-3]),0) + ISNULL(MAX(allocation.[CLO-3]),0))/ISNULL(MAX(targetPar.[CLO-3]),1)) , 'p')  CLO3PctExposure 
		  , FORMAT(((ISNULL(MAX(pos.[CLO-4]),0) + ISNULL(MAX(allocation.[CLO-4]),0))/ISNULL(MAX(targetPar.[CLO-4]),1)) , 'p')  CLO4PctExposure 
		  , FORMAT(((ISNULL(MAX(pos.[CLO-5]),0) + ISNULL(MAX(allocation.[CLO-5]),0))/ISNULL(MAX(targetPar.[CLO-5]),1)) , 'p')  CLO5PctExposure
		  , FORMAT(((ISNULL(MAX(pos.[CLO-6]),0) + ISNULL(MAX(allocation.[CLO-6]),0))/ISNULL(MAX(targetPar.[CLO-6]),1)) , 'p')  CLO6PctExposure
		  , FORMAT(((ISNULL(MAX(pos.[CLO-7]),0) + ISNULL(MAX(allocation.[CLO-7]),0))/ISNULL(MAX(targetPar.[CLO-7]),1)) , 'p')  CLO7PctExposure
		  , FORMAT(((ISNULL(MAX(pos.[CLO-8]),0) + ISNULL(MAX(allocation.[CLO-8]),0))/ISNULL(MAX(targetPar.[CLO-8]),1)) , 'p')  CLO8PctExposure

		  , MAX(targetPar.[CLO-1]) CLO1TargetPar
		  , MAX(targetPar.[CLO-2]) CLO2TargetPar
		  , MAX(targetPar.[CLO-3]) CLO3TargetPar
		  , MAX(targetPar.[CLO-4]) CLO4TargetPar
		  , MAX(targetPar.[CLO-5]) CLO5TargetPar
		  , MAX(targetPar.[CLO-6]) CLO6TargetPar
		  , MAX(targetPar.[CLO-7]) CLO7TargetPar
		  , MAX(targetPar.[CLO-8]) CLO8TargetPar

		  , s.SecurityId
		  , MAX(s.SecurityCode		)		SecurityCode
		  , MAX(s.SecurityDesc		)		SecurityDesc
		  , MAX(s.BBGId			)		BBGId
		  , MAX(s.Issuer			)		Issuer
		  , MAX(s.IssuerId			)		IssuerId
		  , MAX(s.IssuerDesc			)	IssuerDesc
		  , MAX(LTRIM(s.Facility)) Facility
		  , MAX(CASE WHEN s.CallDate <> '1900-01-01' THEN  CONVERT(VARCHAR(10), s.CallDate, 101) ELSE NULL END) CallDate
		  , COALESCE(MAX(country.[CLO-1]), MAX(country.[CLO-2]), MAX(country.[CLO-3]), MAX(country.[CLO-4]), MAX(country.[CLO-5]), MAX(country.[CLO-6]), MAX(country.[CLO-7]), MAX(country.[CLO-8]))  CountryDesc
		  , MAX(CONVERT(VARCHAR(10), s.MaturityDate, 101)) MaturityDate
		  , MAX(s.SnpIndustry)				SnpIndustry
		  , MAX(s.MoodyIndustry)			MoodyIndustry

		  , COALESCE(MAX(covlite.[CLO-1]), MAX(covlite.[CLO-2]), MAX(covlite.[CLO-3]), MAX(covlite.[CLO-4]), MAX(covlite.[CLO-5]), MAX(covlite.[CLO-6]), MAX(covlite.[CLO-7]), MAX(covlite.[CLO-8]))  IsCovLite
		  , MAX(CASE WHEN (s.IsFloating = 1) THEN 'Floating' ELSE 'Fixed' END) IsFloating
		  , MAX(s.LienType						)		LienType
		  , s.IsOnWatch					
		  , MAX(s.WatchObjectTypeId				)		WatchObjectTypeId
		  , MAX(s.WatchObjectId					)		WatchObjectId					
		  , MAX(s.WatchId						)		WatchId						
		  , MAX(s.WatchComments				)		WatchComments				
		  , MAX(s.WatchLastUpdatedOn				)		WatchLastUpdatedOn				
		  , MAX(s.WatchUser						)		WatchUser						

		  , MAX(s.SellCandidateObjectTypeId) SellCandidateObjectTypeId
		  , MAX(s.SellCandidateObjectId) SellCandidateObjectId					
		  , MAX(s.SellCandidateId) SellCandidateId						
		  , MAX(s.SellCandidateComments) SellCandidateComments				
		  , MAX(s.SellCandidateLastUpdatedOn) SellCandidateLastUpdatedOn				
		  , MAX(s.SellCandidateUser) SellCandidateUser						
		  , MAX(s.OrigSecurityCode				)		OrigSecurityCode				
		  , MAX(s.OrigSecurityDesc				)		OrigSecurityDesc				
		  , MAX(s.OrigBBGId					)		OrigBBGId					
		  , MAX(s.OrigIssuer					)		OrigIssuer		
		  
		  , MAX(s.OrigFacility					)		OrigFacility					
		  , MAX(s.OrigCallDate 				)		OrigCallDate 				
		  , MAX(s.OrigMaturityDate				)		OrigMaturityDate				
		  , MAX(s.OrigSnpIndustry				)		OrigSnpIndustry				
		  , MAX(s.OrigMoodyIndustry			)		OrigMoodyIndustry			
		  , MAX(s.OrigIsFloating 				)		OrigIsFloating 				
		  , MAX(s.OrigLienType					)		OrigLienType					
		  , MAX(c.MoodyFacilityRatingAdjusted	)	AS OrigMoodyFacilityRatingAdjusted
		  , MAX(ISNULL(c.MoodyCashFlowRatingAdjusted, m.MoodyCashFlowRatingAdjusted))	AS OrigMoodyCashFlowRatingAdjusted
		  , CONVERT(VARCHAR, CAST(AVG(m.Bid) AS MONEY),1)  Bid

		  , CONVERT(VARCHAR, CAST(AVG(m.Offer)AS MONEY),1) Offer
		  , MAX(m.Bid) BidNum
		  , MAX(m.Offer) OfferNum
		  , CAST(MAX(m.Spread) AS NUMERIC(20,2)) Spread	
		  , CAST(MAX(m.LiborFloor) AS NUMERIC(20,2))	LiborFloor
		  , MAX(m.MoodyCashFlowRating) MoodyCashFlowRating
		  , COALESCE(MAX(c.MoodyCashFlowRatingAdjusted),MAX(s.MoodyCashFlowRatingAdjusted), MAX(m.MoodyCashFlowRatingAdjusted)) MoodyCashFlowRatingAdjusted
		  , MAX(m.MoodyFacilityRating)		MoodyFacilityRating
		  , MAX(m.MoodyRecovery)		    MoodyRecovery
		  , MAX(m.SnPIssuerRating)  		SnPIssuerRating				
		  , MAX(c.SnPIssuerRatingAdjusted)	SnPIssuerRatingAdjusted		
		  , MAX(m.SnPFacilityRating			)		SnPFacilityRating			
		  , MAX(m.SnPfacilityRatingAdjusted	)		SnPfacilityRatingAdjusted	
		  , MAX(m.SnPRecoveryRating			)		SnPRecoveryRating			
		  , MAX(m.MoodyOutlook					)		MoodyOutlook					

		  , MAX(m.MoodyWatch					)		MoodyWatch					
		  , MAX(m.SnPWatch						)		SnPWatch						
		  , CONVERT(VARCHAR(10), MAX(m.NextReportingDate), 101) NextReportingDate
		  , CONVERT(VARCHAR(10), MAX(m.FiscalYearEndDate), 101) FiscalYearEndDate
		  , CAST(AVG(c.YieldBid			)AS NUMERIC(20,2))			YieldBid				
		  , CAST(AVG(c.YieldOffer			)AS NUMERIC(20,2))			YieldOffer			
		  , CAST(AVG(c.YieldMid			)AS NUMERIC(20,2))			YieldMid				
		  , CAST(AVG(c.CappedYieldBid		)AS NUMERIC(20,2))			CappedYieldBid		
		  , CAST(AVG(c.CappedYieldOffer	)AS NUMERIC(20,2))			CappedYieldOffer		
		  , CAST(AVG(c.CappedYieldMid		)AS NUMERIC(20,2))			CappedYieldMid		
		  , CAST(AVG(c.TargetYieldBid		)AS NUMERIC(20,2))			TargetYieldBid		
		  , CAST(AVG(c.TargetYieldOffer	)AS NUMERIC(20,2))			TargetYieldOffer		
		  , CAST(AVG(c.TargetYieldMid		)AS NUMERIC(20,2))			TargetYieldMid		
		  , CAST(AVG(c.BetterWorseBid		)AS NUMERIC(20,2))			BetterWorseBid		
		  , CAST(AVG(c.BetterWorseOffer	)AS NUMERIC(20,2))			BetterWorseOffer		

		  , CAST(AVG(c.BetterWorseMid		)AS NUMERIC(20,2))			BetterWorseMid		
		  , CAST(AVG(c.TotalCoupon			)AS NUMERIC(20,2))			TotalCoupon			
		  , CAST(AVG(CASE WHEN c.FundId = 4 THEN NULL else c.WARF end)AS NUMERIC(20,2))			WARF					
		  , CAST(AVG(c.WARFRecovery		)AS NUMERIC(20,2))			WARFRecovery			
		  , CAST(AVG(c.Life				)AS NUMERIC(20,2))			Life
		  , FORMAT(NULLIF(ISNULL(MAX(TP.TotalExposure), 0),0), '#,###') TotalPar
		  , ISNULL(MAX(TP.TotalExposure), 0) TotalParNum
		  , (ISNULL(MAX(c.TotalPar),0)) BODTotalPar
		  , ISNULL(MAX(s.MoodyFacilityRatingAdjusted),  MAX(c.MoodyFacilityRatingAdjusted)) MoodyFacilityRatingAdjusted
		  , MAX(a.CLOAnalyst)			CLOAnalyst
		  , MAX(a.HFAnalyst)				HFAnalyst
		  , CONVERT(VARCHAR(10), MAX(a.AsOfDate), 101) AsOfDate
		  , MAX(a.CreditScore)	CreditScore	
		  , MAX(a.LiquidityScore)	LiquidityScore		
		  , MAX(a.OneLLeverage)	OneLLeverage		

		  , CONVERT(VARCHAR, CAST(MAX(a.TotalLeverage) AS MONEY), 1) TotalLeverage
		  , CONVERT(VARCHAR, CAST(MAX(a.EVMultiple) AS MONEY), 1) EVMultiple
		  , CONVERT(VARCHAR, CAST(MAX(a.LTMRevenues) AS MONEY), 1) LTMRevenues
		  , CONVERT(VARCHAR, CAST(MAX(a.LTMEBITDA )AS MONEY), 1) LTMEBITDA
		  , CONVERT(VARCHAR, CAST(MAX(a.FCF) AS MONEY), 1) FCF
		  , MAX(a.Comments)						Comments	
		  , MAX(a.BusinessDescription)			BusinessDescription	
		  , MAX(a.AgentBank			)			AgentBank			
		  , MAX(s.MaturityDate) SecurityMaturityDate
		  , CAST(0 AS BIT) AS IsOnAlert
		  , CAST(MAX(a.LTMFCF) AS NUMERIC(38,2)) LTMFCF
		  , CAST(MAX(a.EnterpriseValue) AS NUMERIC(10,2)) EnterpriseValue
		  , CAST(MAX(a.SeniorLeverage) AS NUMERIC(10,2)) SeniorLeverage
		  , CONVERT(VARCHAR, CAST(MAX(m.CostPrice) AS MONEY), 1) CostPrice
		  , MAX(m.CostPrice) CostPriceNum

		  , MAX(pm.Bid)	PrevDayBidNum
		  , MAX(pm.Offer)	PrevDayOfferNum
		  , CONVERT(VARCHAR, CAST(MAX(pm.Bid) AS MONEY), 1) PrevDayBid
		  , CONVERT(VARCHAR, CAST(MAX(pm.Offer) AS MONEY), 1) PrevDayOffer
		  , CASE WHEN ISNULL(MAX(m.Bid),0) <> 0 AND ISNULL(MAX(pm.Bid),0) <> 0 THEN (MAX(m.Bid) - MAX(pm.Bid)) ELSE NULL END PriceMove
		  , NULL AS SearchText
		  , MAX(s.LienTypeId) LienTypeId
		  , MAX(cs.ScoreDescription) ScoreDescription
		  , ISNULL(MAX(lc.MaxAmt), MAX(wso.MaxIssueSize)) GlobalAmount
		  , a.IsPrivate
		  , a.Sponsor
		  , CAST(ISNULL(MAX(matrix.[CLO-1]),0) as decimal(28,2)) CLO1MatrixImpliedSpread
		  , CAST(ISNULL(MAX(matrix.[CLO-2]),0) as decimal(28,2)) CLO2MatrixImpliedSpread
		  , CAST(ISNULL(MAX(matrix.[CLO-3]),0) as decimal(28,2)) CLO3MatrixImpliedSpread
		  , CAST(ISNULL(MAX(matrix.[CLO-4]),0) as decimal(28,2)) CLO4MatrixImpliedSpread
		  , CAST(ISNULL(MAX(matrix.[CLO-5]),0) as decimal(28,2)) CLO5MatrixImpliedSpread
		  , CAST(ISNULL(MAX(matrix.[CLO-6]),0) as decimal(28,2)) CLO6MatrixImpliedSpread
		  , CAST(ISNULL(MAX(matrix.[CLO-7]),0) as decimal(28,2)) CLO7MatrixImpliedSpread
		  , CAST(ISNULL(MAX(matrix.[CLO-8]),0) as decimal(28,2)) CLO8MatrixImpliedSpread
		  , CLO1DifferentialImpliedSpread = CAST( ISNULL(MAX(m.Spread),0) - ISNULL(MAX(matrix.[CLO-1]),0)   as decimal(28,2))
		  , CLO2DifferentialImpliedSpread = CAST( ISNULL(MAX(m.Spread),0) - ISNULL(MAX(matrix.[CLO-2]),0)   as decimal(28,2))
		  , CLO3DifferentialImpliedSpread = CAST( ISNULL(MAX(m.Spread),0) - ISNULL(MAX(matrix.[CLO-3]),0)   as decimal(28,2))
		  , CLO4DifferentialImpliedSpread = CAST( ISNULL(MAX(m.Spread),0) - ISNULL(MAX(matrix.[CLO-4]),0)   as decimal(28,2))
		  , CLO5DifferentialImpliedSpread = CAST( ISNULL(MAX(m.Spread),0) - ISNULL(MAX(matrix.[CLO-5]),0)   as decimal(28,2))
		  , CLO6DifferentialImpliedSpread = CAST( ISNULL(MAX(m.Spread),0) - ISNULL(MAX(matrix.[CLO-6]),0)   as decimal(28,2))
		  , CLO7DifferentialImpliedSpread = CAST( ISNULL(MAX(m.Spread),0) - ISNULL(MAX(matrix.[CLO-7]),0)   as decimal(28,2))
		  , CLO8DifferentialImpliedSpread = CAST( ISNULL(MAX(m.Spread),0) - ISNULL(MAX(matrix.[CLO-8]),0)   as decimal(28,2))

		  , CAST(ISNULL(MAX(matrixwarfrecovery.[CLO-1]),0) as decimal(28,2)) CLO1MatrixWarfRecovery
		  , CAST(ISNULL(MAX(matrixwarfrecovery.[CLO-2]),0) as decimal(28,2)) CLO2MatrixWarfRecovery
		  , CAST(ISNULL(MAX(matrixwarfrecovery.[CLO-3]),0) as decimal(28,2)) CLO3MatrixWarfRecovery
		  , CAST(ISNULL(MAX(matrixwarfrecovery.[CLO-4]),0) as decimal(28,2)) CLO4MatrixWarfRecovery
		  , CAST(ISNULL(MAX(matrixwarfrecovery.[CLO-5]),0) as decimal(28,2)) CLO5MatrixWarfRecovery
		  , CAST(ISNULL(MAX(matrixwarfrecovery.[CLO-6]),0) as decimal(28,2)) CLO6MatrixWarfRecovery
		  , CAST(ISNULL(MAX(matrixwarfrecovery.[CLO-7]),0) as decimal(28,2)) CLO7MatrixWarfRecovery
		  , CAST(ISNULL(MAX(matrixwarfrecovery.[CLO-8]),0) as decimal(28,2)) CLO8MatrixWarfRecovery
		  , MAX(c.zSnPAssetRecoveryRating)
		  , AVG(c.SnpWarf)
		  ,	AVG(C.SnpLgd)
		  , AVG(c.MoodysLgd)
		  , AVG(c.YieldAvgLgd)
		  , MAX(c.SnpAAARecovery)
		  , MAX(m.SnpCreditWatch)
		  , FORMAT(AVG(NULLIF(ISNULL(m.LiborBaseRate,0),0)) , 'p')  LiborBaseRate   
		  , CAST(AVG(CASE WHEN c.FundId <> 4 THEN NULL else c.WARF end)AS NUMERIC(20,2))			[CLO-4 WARF]
		  , CAST(AVG(CASE WHEN c.FundId <> 5 THEN NULL else c.WARF end)AS NUMERIC(20,2))			[CLO-5 WARF]
		  ,MAX(a.[LiborCategory])
		  ,MAX(a.[LiborTransitionNote])
    FROM  CLO.vw_Security s  WITH (NOLOCK)
	      LEFT  JOIN CLO.vw_SecurityMarket m WITH (NOLOCK) ON s.SecurityId			= m.SecurityId 
		  LEFT  JOIN CLO.vw_PrevDaySecurityMarket pm WITH (NOLOCK) ON s.SecurityId	= pm.SecurityId 
		  LEFT  JOIN CLO.vw_CurrentAnalystResearch a WITH (NOLOCK) ON a.IssuerId	= s.IssuerId
		  LEFT  JOIN CLO.vw_Calculation c WITH (NOLOCK) ON s.SecurityId			= c.SecurityId 
		  LEFT  JOIN CLO.vw_PivotedPositionExposure		pos  WITH (NOLOCK) ON pos.SecurityId = s.SecurityId
		  LEFT  JOIN CLO.vw_PivotedPositionCountry		country  WITH (NOLOCK) ON country.SecurityId = s.SecurityId
		  LEFT  JOIN CLO.vw_PivotedPositionIsCovLite	covlite  WITH (NOLOCK) ON covlite.SecurityId = s.SecurityId
		  LEFT  JOIN CLO.vw_PivotedTradeAllocation	allocation  WITH (NOLOCK) ON allocation.SecurityId = s.SecurityId
		  LEFT  JOIN CLO.#PivotedMatrixImpliedSpread	matrix  WITH (NOLOCK) ON matrix.SecurityId = s.SecurityId
		  LEFT  JOIN CLO.#PivotedMatrixWarfRecovery		matrixwarfrecovery  WITH (NOLOCK) ON matrixwarfrecovery.SecurityId = s.SecurityId

		  LEFT OUTER JOIN CLO.CreditScore cs ON CAST(a.CreditScore AS INT) = cs.Id
		  LEFT OUTER JOIN wsodata wso ON wso.SecurityCode = s.SecurityCode
		  LEFT OUTER JOIN loancontract lc ON lc.SecurityCode = s.SecurityCode
		  LEFT OUTER JOIN totalPar TP ON TP.SecurityId = s.SecurityId
		  CROSS JOIN CLO.vw_PivotedFundTargetPar	targetpar
	GROUP BY S.SecurityId,s.IsOnWatch, a.IsPrivate, a.Sponsor
	
	drop table #PivotedMatrixImpliedSpread
	drop table #PivotedMatrixWarfRecovery

RETURN 0
GO
PRINT N'Refreshing [CLO].[spCalculateSummaryData]...';


GO
EXECUTE sp_refreshsqlmodule N'[CLO].[spCalculateSummaryData]';


GO
PRINT N'Refreshing [CLO].[spGetRatingsChange]...';


GO
EXECUTE sp_refreshsqlmodule N'[CLO].[spGetRatingsChange]';


GO
PRINT N'Refreshing [CLO].[sp_GetExcelPluginData]...';


GO
EXECUTE sp_refreshsqlmodule N'[CLO].[sp_GetExcelPluginData]';


GO
PRINT N'Refreshing [CLO].[spGetAllPositionForSecurities]...';


GO
EXECUTE sp_refreshsqlmodule N'[CLO].[spGetAllPositionForSecurities]';


GO
PRINT N'Refreshing [CLO].[spGetAllPositions]...';


GO
EXECUTE sp_refreshsqlmodule N'[CLO].[spGetAllPositions]';


GO
PRINT N'Refreshing [CLO].[spPositionSizeByCreditScoreByTotalCouponRuleProcessor]...';


GO
EXECUTE sp_refreshsqlmodule N'[CLO].[spPositionSizeByCreditScoreByTotalCouponRuleProcessor]';


GO
PRINT N'Refreshing [CLO].[spTop10Bottom10Movers]...';


GO
EXECUTE sp_refreshsqlmodule N'[CLO].[spTop10Bottom10Movers]';


GO
PRINT N'Update complete.';


GO


ALTER VIEW [CLO].[vw_CurrentAnalystResearch]
AS
    WITH    analystrefresh_cfe
              AS (
                  SELECT    D.AnalystResearchDetailId AS AnalystResearchId, IssuerId, H.CLOAnalystId AS CLOAnalystUserId
					, H.HFAnalystId AS HFAnalystUserId, AsOfDate, CreditScore, CAST(NULL AS DECIMAL(10, 4)) LiquidityScore
					, CAST(NULL AS DECIMAL(10, 4)) AS OneLLeverage, D.SeniorLeverage
					, D.EnterpriseValue, D.LTMFCF, TotalLeverage, CAST(NULL AS DECIMAL(10, 4)) AS EVMultiple
					, LTMRevenues, LTMEBITDA, FCF, Comments, BusinessDescription, GETDATE() AS CreatedOn, 'YodaUser' AS CreatedBy
					, H.Sponsor
					, H.[LiborCategory]
					, H.[LiborTransitionNote]
					, GETDATE() AS LastUpdatedOn, 'YodaUser' AS LastUpdatedBy, AgentBank
					, ROW_NUMBER() OVER (PARTITION BY IssuerId ORDER BY AsOfDate DESC) AS ROWNUM
                  FROM      CLO.AnalystResearchDetail D WITH (NOLOCK) INNER JOIN CLO.AnalystResearchHeader H WITH (NOLOCK)
				  ON H.AnalystResearchHeaderId = D.AnalystResearchHeaderId
                  WHERE     AsOfDate IS NULL
                            OR AsOfDate <= CONVERT(DATE, GETDATE())
                 )
    SELECT  AnalystResearchId, a.IssuerId, a.CLOAnalystUserId, a.HFAnalystUserId, cloanalyst.AnalystDesc CLOAnalyst
		, hfanalyst.AnalystDesc HFAnalyst, AsOfDate, CreditScore, LiquidityScore, OneLLeverage, TotalLeverage
		, EVMultiple, LTMRevenues, LTMEBITDA, FCF, Comments, issuer.IssuerDesc, a.BusinessDescription, a.AgentBank
		, SeniorLeverage, EnterpriseValue, LTMFCF, issuer.IsPrivate, a.Sponsor, a.[LiborCategory],a.[LiborTransitionNote]
    FROM    analystrefresh_cfe a WITH (NOLOCK)
    LEFT JOIN CLO.vw_YorkCoreGenevaAnalyst cloanalyst WITH (NOLOCK) ON cloanalyst.AnalystId = a.CLOAnalystUserId
    LEFT JOIN CLO.vw_YorkCoreGenevaAnalyst hfanalyst WITH (NOLOCK) ON hfanalyst.AnalystId = a.HFAnalystUserId
    JOIN    CLO.Issuer issuer WITH (NOLOCK) ON a.IssuerId = issuer.IssuerId
    WHERE   ROWNUM = 1; 

GO
USE [Yoda]
GO

/****** Object:  View [CLO].[vw_Position]    Script Date: 11/2/2020 3:51:55 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [CLO].[vw_Position]
AS
WITH prev_position
AS	(
		SELECT PositionId, FundId, SecurityId, DateId, MarketValue, Exposure, PctExposure, PxPrice, IsCovLite, CountryId
			, CreatedOn, CreatedBy, LastUpdatedOn, LastUpdatedBy, IsStale, CapitalizedInterestOrig,[SnPAssetRecoveryRating]
		FROM CLO.Position WITH (NOLOCK)
		WHERE DateId = CLO.GetPrevDayDateId() OR PositionId IS NULL
	)
SELECT p.PositionId, p.DateId PositionDateId
	, FORMAT(NULLIF((ISNULL(p.Exposure, 0) + ISNULL(s.Allocation, 0)), 0), '#,###') Exposure
	, (ISNULL(p.Exposure, 0) + ISNULL(s.Allocation, 0)) NumExposure, ISNULL(p.Exposure, 0) BODExposure
	, ISNULL(p.Exposure, 0) + ISNULL((CASE WHEN s.HasBuy = 1 THEN s.Allocation ELSE 0 END), 0) BODwithBuyExposure
	, FORMAT(((ISNULL(p.Exposure, 0) + ISNULL(s.Allocation, 0)) / s.TargetPar), 'p') PctExposure
	, ISNULL(p.CapitalizedInterestOrig, 0) CapitalizedInterestOrig,
	p.[SnPAssetRecoveryRating],
	p.PxPrice
	, ((ISNULL(p.Exposure, 0) + ISNULL(s.Allocation, 0)) / s.TargetPar) PctExposureNum, s.FundId, s.FundCode
	, s.FundDesc, s.SecurityId, s.SecurityCode, s.SecurityDesc, s.BBGId, s.Issuer, s.IssuerId
	, s.IssuerDesc, LTRIM(s.Facility) Facility
	, CASE WHEN s.CallDate <> '1900-01-01' THEN CONVERT(VARCHAR(10), s.CallDate, 101) ELSE NULL END CallDate
	, country.CountryDesc, CONVERT(VARCHAR(10), s.MaturityDate, 101) MaturityDate
	, s.SnpIndustry, s.MoodyIndustry, CASE WHEN (p.IsCovLite = 1) THEN 'Y' ELSE 'N' END IsCovLite
	, CASE WHEN (s.IsFloating = 1) THEN 'Floating' ELSE 'Fixed' END IsFloating
	, s.LienType

	, s.IsOnWatch, s.WatchObjectTypeId, s.WatchObjectId, s.WatchId, s.WatchComments, s.WatchLastUpdatedOn, s.WatchUser

	, s.SellCandidateObjectTypeId, s.SellCandidateObjectId, s.SellCandidateId, s.SellCandidateComments , s.SellCandidateLastUpdatedOn, s.SellCandidateUser

	, s.OrigSecurityCode, s.OrigSecurityDesc, s.OrigBBGId
	, s.OrigIssuer, s.OrigFacility, s.OrigCallDate, s.OrigMaturityDate, s.OrigSnpIndustry
	, s.OrigMoodyIndustry, s.OrigIsFloating, s.OrigLienType
	, c.MoodyFacilityRatingAdjusted AS OrigMoodyFacilityRatingAdjusted
	, m.MoodyCashFlowRatingAdjusted AS OrigMoodyCashFlowRatingAdjusted, s.PrincipalCash, s.LiabilityPar, s.EquityPar
	, s.MoodyIndustryId, s.SecurityLastUpdatedOn, s.SecurityLastUpdatedBy, s.SecurityCreatedOn
	, s.SecurityCreatedBy, m.DateId MarketDateId, m.MarketDataId, m.OverrideMarketDataId
	, CONVERT(VARCHAR, CAST(m.Bid AS MONEY), 1) Bid, CONVERT(VARCHAR, CAST(m.Offer AS MONEY), 1) Offer
	, CONVERT(VARCHAR, CAST(pm.Bid AS MONEY), 1) PrevDayBid
	, CONVERT(VARCHAR, CAST(pm.Offer AS MONEY), 1) PrevDayOffer
	, CONVERT(VARCHAR, CAST(m.CostPrice AS MONEY), 1) CostPrice, m.CostPrice CostPriceNum, m.Bid BidNum
	, m.Offer OfferNum
	, CASE WHEN ISNULL(m.Bid, 0) <> 0 AND ISNULL(pm.Bid, 0) <> 0 THEN FORMAT(((m.Bid - pm.Bid) / m.Bid), 'p') ELSE NULL END PctBidDiff
	, CASE WHEN ISNULL(m.Bid, 0) <> 0 AND ISNULL(pm.Bid, 0) <> 0 THEN ((m.Bid - pm.Bid) / m.Bid) ELSE NULL END PctBidDiffNum
	, CASE WHEN ISNULL(m.Offer, 0) <> 0 AND ISNULL(pm.Offer, 0) <> 0 THEN FORMAT(((m.Offer - pm.Offer) / m.Offer), 'p') ELSE NULL END PctOfferDiff
	, CASE WHEN ISNULL(m.Offer, 0) <> 0 AND ISNULL(pm.Offer, 0) <> 0 THEN ((m.Offer - pm.Offer) / m.Offer) ELSE NULL END PctOfferDiffNum
	, CASE WHEN ISNULL(m.Bid, 0) <> 0 AND ISNULL(pm.Bid, 0) <> 0 THEN (m.Bid - pm.Bid) ELSE NULL END PriceMove
	, pm.Bid PrevDayBidNum, pm.Offer PrevDayOfferNum
	, CAST(m.Spread AS NUMERIC(20, 2)) Spread, CAST(m.LiborFloor AS NUMERIC(20, 2)) LiborFloor
	, m.MoodyCashFlowRating
	, ISNULL(s.MoodyCashFlowRatingAdjusted, m.MoodyCashFlowRatingAdjusted) MoodyCashFlowRatingAdjusted
	, m.MoodyFacilityRating, m.MoodyRecovery, m.SnPIssuerRating, m.SnPIssuerRatingAdjusted
	, m.SnPFacilityRating, m.SnPfacilityRatingAdjusted, m.SnPRecoveryRating, m.MoodyOutlook, m.MoodyWatch
	, m.SnPWatch, CONVERT(VARCHAR(10), m.NextReportingDate, 101) NextReportingDate
	, CONVERT(VARCHAR(10), m.FiscalYearEndDate, 101) FiscalYearEndDate, c.CalculationId, c.YieldBid
	, c.YieldOffer, CAST(c.YieldMid AS NUMERIC(20, 2)) YieldMid
	, CAST(c.CappedYieldBid AS NUMERIC(20, 2)) CappedYieldBid
	, CAST(c.CappedYieldOffer AS NUMERIC(20, 2)) CappedYieldOffer
	, CAST(c.CappedYieldMid AS NUMERIC(20, 2)) CappedYieldMid
	, CAST(c.TargetYieldBid AS NUMERIC(20, 2)) TargetYieldBid
	, CAST(c.TargetYieldOffer AS NUMERIC(20, 2)) TargetYieldOffer
	, CAST(c.TargetYieldMid AS NUMERIC(20, 2)) TargetYieldMid
	, CAST(c.BetterWorseBid AS NUMERIC(20, 2)) BetterWorseBid
	, CAST(c.BetterWorseOffer AS NUMERIC(20, 2)) BetterWorseOffer
	, CAST(c.BetterWorseMid AS NUMERIC(20, 2)) BetterWorseMid
	, CAST(c.TotalCoupon AS NUMERIC(20, 2)) TotalCoupon, CAST(c.WARF AS NUMERIC(20, 2)) WARF
	, CAST(c.WARFRecovery AS NUMERIC(20, 2)) WARFRecovery, CAST(c.Life AS NUMERIC(20, 2)) Life
	, c.DateId CalculationDateId
	, FORMAT(NULLIF((ISNULL(c.TotalPar, 0) + ISNULL(s.TotalAllocation, 0)), 0), '#,###') TotalPar
	, NULLIF((ISNULL(c.TotalPar, 0) + ISNULL(s.TotalAllocation, 0)), 0) TotalParNum
	, (ISNULL(c.TotalPar, 0)) BODTotalPar
	, ISNULL(s.MoodyFacilityRatingAdjusted, c.MoodyFacilityRatingAdjusted) MoodyFacilityRatingAdjusted
	, ISNULL(a.AnalystResearchId, 0) AnalystResearchId, a.CLOAnalyst, a.HFAnalyst
	, CONVERT(VARCHAR(10), a.AsOfDate, 101) AsOfDate, a.CreditScore, a.LiquidityScore
	, a.OneLLeverage, CONVERT(VARCHAR, CAST(a.TotalLeverage AS MONEY), 1) TotalLeverage
	, CONVERT(VARCHAR, CAST(a.EVMultiple AS MONEY), 1) EVMultiple
	, CONVERT(VARCHAR, CAST(a.LTMRevenues AS MONEY), 1) LTMRevenues
	, CONVERT(VARCHAR, CAST(a.LTMEBITDA AS MONEY), 1) LTMEBITDA
	, CONVERT(VARCHAR, CAST(a.FCF AS MONEY), 1) FCF, CAST(a.LTMFCF AS MONEY) LTMFCF
	, CAST(a.EnterpriseValue AS MONEY) EnterpriseValue, CAST(a.SeniorLeverage AS MONEY) SeniorLeverage, a.Comments
	, a.BusinessDescription, a.AgentBank, cfra.Rank MoodyCashFlowRatingAdjustedRank
	, fra.Rank MoodyFacilityRatingAdjustedRank, s.MaturityDate SecurityMaturityDate
	, CASE WHEN s.MaturityDate IS NOT NULL THEN DATEDIFF(DAY, GETDATE(), s.MaturityDate) ELSE NULL END MaturityDays
	, s.WALifeAdjustment, s.TradePrice, CAST(0 AS BIT) AS IsOnAlert, ISNULL(s.IsStale, 0) IsStale
	, NULL AS SearchText
	, ROW_NUMBER() OVER (PARTITION BY p.PositionId, p.FundId, p.SecurityId ORDER BY p.DateId DESC) AS POSROWNUM
	, cs.ScoreDescription
	, a.Sponsor
	, MatrixImpliedSpread = c.MatrixImpliedSpread
	, DifferentialSpread = ISNULL(c.MatrixImpliedSpread,0)-(m.Spread)
		,a.[LiborCategory]
	,a.[LiborTransitionNote]
FROM CLO.vw_SecurityFund s
	LEFT JOIN prev_position p WITH (NOLOCK)
	ON s.SecurityId = p.SecurityId AND s.FundId = p.FundId AND ISNULL(s.IsStale, 0) = ISNULL(p.IsStale, 0)
	LEFT JOIN CLO.Country country WITH (NOLOCK)
	ON country.CountryId = p.CountryId
	LEFT JOIN CLO.vw_MarketData m WITH (NOLOCK)
	ON s.SecurityId = m.SecurityId AND s.FundId = m.FundId
	LEFT JOIN CLO.vw_PrevDayMarketData pm WITH (NOLOCK)
	ON s.SecurityId = pm.SecurityId AND s.FundId = pm.FundId
	LEFT JOIN CLO.vw_CurrentAnalystResearch a WITH (NOLOCK)
	ON a.IssuerId = s.IssuerId
	LEFT JOIN CLO.vw_Calculation c WITH (NOLOCK)
	ON s.SecurityId = c.SecurityId AND s.FundId = c.FundId
	LEFT JOIN CLO.Rating cfra WITH (NOLOCK)
	ON cfra.RatingDesc = ISNULL(s.MoodyCashFlowRatingAdjusted, m.MoodyCashFlowRatingAdjusted)
	LEFT JOIN CLO.Rating fra WITH (NOLOCK)
	ON fra.RatingDesc = ISNULL(s.MoodyFacilityRatingAdjusted, c.MoodyFacilityRatingAdjusted)
	LEFT OUTER JOIN CLO.CreditScore cs
	ON CAST(a.CreditScore AS INT) = cs.Id;
GO



GO
INSERT INTO [CLO].[AnalystResearchRowLocation]
           ([RowIndex]
           ,[ClassName]
           ,[PropertyName]
           ,[CreatedOn]
           ,[CreatedBy]
           ,[LastUpdatedOn]
           ,[LastUpdatedBy])
     VALUES
( 58, 'AnalystResearchHeader', 'LiborCategory', GETDATE(), 'YODAUser', GETDATE(), 'YODAUser' ),
( 59, 'AnalystResearchHeader', 'LiborTransitionNote', GETDATE(), 'YODAUser', GETDATE(), 'YODAUser' )

GO


INSERT INTO CLO.Field
(
    FieldGroupId,
    FieldName,
    JsonPropertyName,
    FieldTitle,
    JsonFormatString,
    DisplayWidth,
    IsPercentage,
    SortOrder,
    FieldType,
    HeaderCellClass,
    CellClass,
    CellTemplate,
    Hidden,
    PinnedLeft,
    IsSecurityOverride,
    ShowInFilter,
    FilterOrder
)
VALUES
(  3, 'LiborCategory', 'liborCategory', 'LIBOR CATEGORY', NULL, 160, 0, 170.0000, 1, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL), 
(  3, 'LiborTransitionNote', 'liborTransitionNote', 'LIBOR TRANSITION NOTE', NULL, 160, 0, 180.0000, 1, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL)

GO

GO